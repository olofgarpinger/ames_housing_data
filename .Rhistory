ames %>% count(GarageType) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(GarageType, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# GarageYrBlt: Year garage was built, integer
ames %>% count(GarageYrBlt) %>% arrange(desc(n))
# GarageYrBlt: Year garage was built, integer (NA no garage)
# How to deal with NA?
ames %>% count(GarageYrBlt) %>% arrange(desc(n))
ames %>% ggplot(aes(GarageYrBlt, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(GarageYrBlt, YearBuilt)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(GarageYrBlt, YearBuilt)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm") + geom_abline(1, 0)
ames %>% ggplot(aes(GarageYrBlt, YearBuilt)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm") + geom_abline(0, 1)
ames %>% ggplot(aes(GarageYrBlt, YearBuilt)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm") + geom_abline(intercept = 0, slope=1)
ames %>% ggplot(aes(GarageYrBlt, YearBuilt)) +
geom_point(alpha = 0.1) +
geom_abline(intercept = 0, slope=1)
ames %>% ggplot(aes(GarageYrBlt, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
# YearRemodAdd: Remodel date (same as construction date if no remodeling or additions)
ames %>% count(YearRemodAdd) %>% arrange(desc(n))
ames %>% ggplot(aes(YearRemodAdd, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(GarageYrBlt,YearRemodAdd)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(GarageYrBlt,YearRemodAdd)) +
geom_point(alpha = 0.1) +
geom_abline(slope = 1, intercept = 0)
ames %>% ggplot(aes(GarageYrBlt,YearBuilt)) +
geom_point(alpha = 0.1) +
geom_abline(slope = 1, intercept = 0)
# GarageFinish: Interior finish of the garage, 4 levels (Fin	Finished, RFn	Rough Finished,
# Unf	Unfinished, NA	No Garage)
# How to deal with NA?
ames %>% count(GarageFinish) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(GarageFinish, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# GarageArea: Size of garage in square feet
ames %>% count(GarageArea) %>% arrange(desc(n))
ames %>% ggplot(aes(GarageArea, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
# GarageQual: Garage quality 4 levels (Poor to Excellent, NA	No Garage)
ames %>% count(GarageQual) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(GarageQual, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# GarageCond: Garage condition
ames %>% count(GarageCond) %>% arrange(desc(n))
# GarageCond: Garage condition, 4 levels (Poor to Excellent, NA	No Garage)
ames %>% count(GarageCond) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(GarageCond, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# GarageQual: Garage quality, 4 levels (Poor to Excellent, NA	No Garage)
ames %>% count(GarageQual) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(GarageQual, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% ggplot(aes(reorder(GarageCond, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# PavedDrive: Paved driveway, 3 levels (Y	Paved, P	Partial Pavement, N	Dirt/Gravel)
ames %>% count(PavedDrive) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(PavedDrive, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% ggplot(aes(reorder(SaleCondition, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% ggplot(aes(SaleCondition, BuiltYear)) +
geom_point()
ames %>% ggplot(aes(SaleCondition, YearBuilt)) +
geom_point()
ames %>% ggplot(aes(SaleCondition, YearBuilt)) +
geom_boxplot()
ames %>% group_by(YearSold) %>% summarize(medPrice = median(SalePrice)) %>% ggplot(aes(YearSold, medPrice)) +
geom_point()
ames %>% group_by(YearSold) %>% summarize(medPrice = median(SalePrice))
ames %>% group_by(YrSold) %>% summarize(medPrice = median(SalePrice))
ames %>% group_by(YrSold) %>% summarize(medPrice = median(SalePrice))
ames %>% group_by(YrSold) %>% summarize(medPrice = median(SalePrice)) %>% ggplot(aes(YearSold, medPrice)) +
geom_point()
ames %>% group_by(YrSold) %>% summarize(medPrice = median(SalePrice)) %>% ggplot(aes(YrSold, medPrice)) +
geom_point()
# WoodDeckSF: Wood deck area in square feet
ames %>% count(WoodDeckSF) %>% arrange(desc(n))
ames %>% ggplot(aes(WoodDeckSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
# OpenPorchSF: Open porch area in square feet
ames %>% count(OpenPorchSF) %>% arrange(desc(n))
ames %>% ggplot(aes(OpenPorchSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(OpenPorchSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
ames %>% ggplot(aes(WoodDeckSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
# EnclosedPorch: Enclosed porch area in square feet
ames %>% count(EnclosedPorch) %>% arrange(desc(n))
ames %>% ggplot(aes(EnclosedPorch, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
# 3SsnPorch: Three season porch area in square feet
ames %>% count(´3SsnPorch´) %>% arrange(desc(n))
ames %>% ggplot(aes(`3SsnPorch`, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
# 3SsnPorch: Three season porch area in square feet
ames %>% count(`3SsnPorch`) %>% arrange(desc(n))
# 3SsnPorch: Three season porch area in square feet
ames %>% count(`3SsnPorch`) %>% arrange(desc(n))
summary(lm(SalePrice~3SsnPorch, ames))
summary(lm(SalePrice~`3SsnPorch``, ames))
summary(lm(SalePrice~`3SsnPorch`, ames))
dim(ames %>% filter(`3SsnPorch`>0))
# ScreenPorch: Screen porch area in square feet
ames %>% count(ScreenPorch) %>% arrange(desc(n))
dim(ames %>% filter(ScreenPorch>0))
ames %>% ggplot(aes(ScreenPorch, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
ames %>% ggplot(aes(ScreenPorch, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
# PoolArea: Pool area in square feet
ames %>% count(PoolArea) %>% arrange(desc(n))
ames %>% ggplot(aes(PoolArea, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
# PoolQC: Pool quality, 4 levels (Fair to Excellent, NA	No Pool)
ames %>% count(PoolQC) %>% arrange(desc(n))
# Fence: Fence quality, 5 levels (GdPrv	Good Privacy, MnPrv	Minimum Privacy, GdWo	Good Wood,
# MnWw	Minimum Wood/Wire, NA	No Fence)
ames %>% count(Fence) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(PoolQC, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# Fence: Fence quality, 5 levels (GdPrv	Good Privacy, MnPrv	Minimum Privacy, GdWo	Good Wood,
# MnWw	Minimum Wood/Wire, NA	No Fence)
ames %>% count(Fence) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(Fence, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# MiscFeature: Miscellaneous feature not covered in other categories, 6 levels (Elev	Elevator,
# Gar2	2nd Garage (if not described in garage section), Othr	Other, Shed	Shed (over 100 SF),
# TenC	Tennis Court, NA	None)
ames %>% count(MiscFeature) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(MiscFeature, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice~MiscFeature, ames))
ames %>%
select(-(Street:Alley), -Utilities, -LandSlope, -Condition2, -RoofMatl, -BsmtFinSF2, -Heating,
-`1stFlrSF`, -`2ndFlrSF`, -LowQualFinSF, -BsmtHalfBath, -PoolArea, -PoolQC, -MiscFeature)
dim(ames %>%
select(-(Street:Alley), -Utilities, -LandSlope, -Condition2, -RoofMatl, -BsmtFinSF2, -Heating,
-`1stFlrSF`, -`2ndFlrSF`, -LowQualFinSF, -BsmtHalfBath, -PoolArea, -PoolQC, -MiscFeature))
# MiscVal: $Value of miscellaneous feature
ames %>% count(MiscVal) %>% arrange(desc(n))
ames %>% ggplot(aes(MiscVal, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(MiscVal, SalePrice, col = MiscFeature)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(MiscVal, SalePrice)) +
geom_point(aes(col = MiscFeature)) +
geom_smooth(method = "lm")
# MoSold: Month Sold (MM)
# Run through lubridate to get month names e.g.
# Perhaps combine with year to get year+month
ames %>% count(Fence) %>% arrange(desc(n))
# MoSold: Month Sold (MM)
# Run through lubridate to get month names e.g.
# Perhaps combine with year to get year+month
ames %>% count(MoSold) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(MoSold, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% ggplot(aes(as.ordered(MoSold), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% ggplot(aes(as.ordered(YrSold), SalePrice)) +
geom_boxplot(varwidth = T)
# YrSold: Year Sold (YYYY)
# Perhaps combine with year to get year+month
ames %>% count(YrSold) %>% arrange(desc(n))
ames %>% ggplot(aes(as.ordered(YrSold), SalePrice)) +
geom_boxplot(varwidth = T)
library(lubridate)
ymd("2009-10-12")
ymd("2009-10")
ymd("2009-10-NA")
ymd("2009-10-")
# SaleType: Type of sale, 10 levels
ames %>% count(SaleType) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(SaleType, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# SaleCondition: Condition of sale, 6 levels
ames %>% count(SaleCondition) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(SaleCondition, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# SaleCondition: Condition of sale, 6 levels
ames %>% count(SaleCondition) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(SaleCondition, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% mutate(HouseAge = YrSold - YearBuilt) %>%
ggplot(aes(HouseAge, SalePrice)) +
geom_point() +
geom_smooth(method = "lm")
ames %>% mutate(HouseAge = YrSold - YearBuilt) %>%
ggplot(aes(HouseAge, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
# Add feature House Age
ames %>% mutate(HouseAge = YearBuilt) %>%
ggplot(aes(HouseAge, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
# Add feature House
ames %>% mutate(HouseAge = YrSold) %>%
ggplot(aes(HouseAge, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
# Add feature House
ames %>% mutate(HouseAge = YrSold - YearBuilt) %>%
ggplot(aes(HouseAge, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
verse_update
verse_update()
tidyverse_update()
library(tidyverse)
tidyverse_update()
library(tidyverse)
tidyverse_update()
library(tidyverse)
tidyverse_update()
install.packages(c("broom", "dbplyr", "forcats", "hms", "lubridate", "rlang",
"stringr"))
ames <- read_csv("ames_train.csv")
library(tidyverse)
ames1 <- read_csv("ames_train.csv")
ames2 <- read.csv("ames_train.csv")
ames1
ames2
ames2 %>% top_n(10)
ames1 %>% top_n(10)
ames1 %>% top_n(20)
View(ames2)
ames1 <- ames1 %>% select(Id:LandSlope)
ames2 <- ames2 %>% select(Id:LandSlope)
ames1
ames2
ames1
ames1 <- ames1 %>% mutate(MSZoning = as.factor(MSZoning))
ames1
library(tidyverse)
ames <- read_csv("ames_train.csv")
dim(ames)
View(ames)
View(ames)
# MSSubClass - Building class, 15 levels, what does it mean?
ames %>% count(MSSubClass) %>% arrange(n)
ames %>% ggplot(aes(as.ordered(MSSubClass), SalePrice)) + geom_boxplot(varwidth = T)
# MSZoning, 5 levels
# Residential Low Density Zone "RL" (sec 29.701)
# Residential Medium Density Zone "RM" (sec 29.702)
# Residential High Density Zone "RH" (sec 29.704)
# Floating Village Residential (FV)
# C (all)? Commercial districts?
ames %>% count(MSZoning) %>% arrange(n)
ames %>% ggplot(aes(as.factor(MSZoning), SalePrice)) + geom_boxplot(varwidth = T)
ames %>% ggplot(aes(as.factor(MSZoning), SalePrice)) + geom_boxplot(varwidth = T)
# LotFrontage, integer values, Linear feet of street connected to property
# 50, 60, 65, 70, 75, 80, 85 most common
ames %>% ggplot(aes(LotFrontage)) + geom_histogram(binwidth = 1)
ames %>% count(LotFrontage) %>% na.omit() %>% arrange(desc(n))
ames %>% ggplot(aes(LotFrontage, SalePrice)) + geom_point(alpha = 0.1, width = 1, height = 1)
ames %>%
ggplot(aes(LotFrontage, SalePrice)) +
geom_point(alpha = 0.1, width = 1, height = 1) +
geom_smooth()
ames %>%
ggplot(aes(LotFrontage, SalePrice)) +
geom_point(alpha = 0.1, width = 1, height = 1) +
geom_smooth(method = "lm")
# LotArea, integer values, Lot size in square feet
ames %>% ggplot(aes(LotArea)) + geom_histogram(binwidth = 500) + xlim(0, 30000)
ames %>% count(LotArea) %>% na.omit() %>% arrange(desc(n))
ames %>% ggplot(aes(LotArea, SalePrice)) + geom_point(alpha = 0.1, width = 1, height = 1) + xlim(0, 30000)
ames %>% ggplot(aes(LotArea, SalePrice)) +
geom_point(alpha = 0.1, width = 1, height = 1) +
geom_smooth(method = "lm") +
xlim(0, 30000)
ames %>% ggplot(aes(LotArea, SalePrice)) +
geom_point(alpha = 0.1, width = 1, height = 1) +
geom_smooth() +
xlim(0, 30000)
# Street, street type pave or gravel, not enough diversity in data => remove feature
ames %>% count(Street) %>% na.omit() %>% arrange(desc(n))
# Alley, Type of alley access, not enough diversity in data => remove feature
ames %>% count(Alley) %>% arrange(desc(n))
ames %>% ggplot(aes(Alley, SalePrice)) + geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ Alley, data = ames))
# General shape of property, 4 levels (Reg Regular, IR1	Slightly irregular, IR2	Moderately Irregular,
# IR3	Irregular), collapse all irregular to one?
ames %>% count(LotShape) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(LotShape), SalePrice)) + geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ LotShape, data = ames))
# LandContour, Flatness of the property, 4 levels (Lvl - Near Flat/Level,
# Bnk	Banked - Quick and significant rise from street grade to building,
# HLS	Hillside - Significant slope from side to side, Low -	Depression)
ames %>% count(LandContour) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(LandContour), SalePrice)) + geom_boxplot(varwidth = T)
ames %>% ggplot(aes(SalePrice, y = ..density.., col = as.factor(LandContour))) + geom_freqpoly(binwidth = 50000)
summary(lm(SalePrice ~ LandContour, data = ames))
# Utilities, Type of utilities available, not enough diversity in data => remove feature
ames %>% count(Utilities) %>% arrange(desc(n))
# LotConfig, Lot configuration, 5 levels (Inside - Inside lot, Corner - Corner lot, CulDSac - Cul-de-sac,
# FR2	Frontage on 2 sides of property, FR3	Frontage on 3 sides of property)
ames %>% count(LotConfig) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(LotConfig), SalePrice)) + geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ LotConfig, data = ames))
# Utilities, Type of utilities available, not enough diversity in data => remove feature
ames %>% count(Utilities) %>% arrange(desc(n))
# LotConfig, Lot configuration, 5 levels (Inside - Inside lot, Corner - Corner lot, CulDSac - Cul-de-sac,
# FR2	Frontage on 2 sides of property, FR3	Frontage on 3 sides of property)
ames %>% count(LotConfig) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(LotConfig), SalePrice)) + geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ LotConfig, data = ames))
# LandSlope, Slope of property, not enough diversity in data => remove feature
ames %>% count(LandSlope) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(LandSlope), SalePrice)) + geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ LandSlope, data = ames))
# Neighborhood, Physical locations within Ames city limits, 25 levels
ames %>% count(Neighborhood) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(Neighborhood, SalePrice, FUN=median), SalePrice)) + geom_boxplot(varwidth = T) + coord_flip()
summary(lm(SalePrice ~ Neighborhood, data = ames))
# Neighborhood, Physical locations within Ames city limits, 25 levels
ames %>% count(Neighborhood) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(Neighborhood, SalePrice, FUN=median), SalePrice)) + geom_boxplot(varwidth = T) + coord_flip()
summary(lm(SalePrice ~ Neighborhood, data = ames))
# Condition1, Proximity to various conditions, 9 levels
ames %>% count(Condition1) %>% arrange(desc(n))
summary(lm(SalePrice ~ LotConfig, data = ames))
# LandSlope, Slope of property, not enough diversity in data => remove feature
ames %>% count(LandSlope) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(LandSlope), SalePrice)) + geom_boxplot(varwidth = T)
# Condition1, Proximity to various conditions, 9 levels
ames %>% count(Condition1) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(Condition1, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T) +
coord_flip()
summary(lm(SalePrice ~ Condition1, data = ames))
# Condition2, Proximity to various conditions (if more than one is present), 9 levels,
# not enough diversity in data => remove feature
ames %>% count(Condition2) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(Condition2, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T) +
coord_flip()
# BldgType, Type of dwelling, 5 levels (1Fam - Single-family Detached,
# 2FmCon - Two-family Conversion; originally built as one-family dwelling
# Duplx	- Duplex, TwnhsE - Townhouse End Unit, Twnhs - Townhouse Inside Unit)
ames %>% count(BldgType) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(BldgType, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T) +
coord_flip()
summary(lm(SalePrice ~ BldgType, data = ames))
# OverallQual, Rates the overall material and finish of the house, Integers 1-10
ames %>% count(OverallQual) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(OverallQual, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T) +
coord_flip()
summary(lm(SalePrice ~ HouseStyle, data = ames))
ames %>% ggplot(aes(reorder(HouseStyle, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T) +
coord_flip()
summary(lm(SalePrice ~ OverallQual, data = ames))
summary(lm(SalePrice ~ as.ordered(OverallQual), data = ames))
summary(lm(SalePrice ~ as.factor(OverallQual), data = ames))
summary(lm(SalePrice ~ (OverallQual), data = ames))
summary(lm(SalePrice ~ as.factor(OverallQual), data = ames))
ames %>% ggplot(aes(reorder(OverallQual, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T) +
coord_flip()
# OverallQual, Rates the overall material and finish of the house, Integers 1-10
ames %>% count(OverallQual) %>% arrange(desc(n))
# OverallCond, Rates the overall condition of the house, Integers 1-9
ames %>% count(OverallCond) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(OverallCond, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T) +
coord_flip()
summary(lm(SalePrice ~ as.factor(OverallCond), data = ames))
# YearBuilt, Original construction date, integer value
ames %>% count(YearBuilt) %>% arrange(desc(n))
ames %>% ggplot(aes(YearBuilt, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth(method = "lm")
summary(lm(SalePrice ~ as.factor(YearBuilt), data = ames))
summary(lm(SalePrice ~ YearBuilt, data = ames))
summary(loess(SalePrice ~ YearBuilt, data = ames))
summary(gam(SalePrice ~ YearBuilt, data = ames))
summary(lm(SalePrice ~ YearBuilt, data = ames))
ames %>% ggplot(aes(YearBuilt, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth()
ames %>% ggplot(aes(YearBuilt, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth(span = 1)
ames %>% ggplot(aes(YearBuilt, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth(span = 10)
ames %>% ggplot(aes(YearBuilt, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth(span = 0.1)
ames %>% ggplot(aes(YearBuilt, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth(span = 100)
ames %>% ggplot(aes(YearBuilt, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth(span = 0)
ames %>% ggplot(aes(YearBuilt, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth(span = 0)
ames %>% ggplot(aes(YearBuilt, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth(span = 1)
ames %>% ggplot(aes(YearBuilt, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth(span = 1, method = "loess")
ames %>% ggplot(aes(YearBuilt, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth(span = .1, method = "loess")
ames %>% ggplot(aes(YearBuilt, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth(span = .7, method = "loess")
ames %>% ggplot(aes(YearBuilt, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth(span = 10, method = "loess")
ames %>% ggplot(aes(YearBuilt, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth(span = 0.2, method = "loess")
ames %>% ggplot(aes(YearBuilt, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth(span = 0.5, method = "loess")
ames %>% ggplot(aes(YearBuilt, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth(span = 0.7, method = "loess")
library(tidyverse)
ames <- read_csv("ames_train.csv")
dim(ames)
View(ames)
# MSSubClass - Building class, 15 levels, what does it mean?
ames %>% count(MSSubClass) %>% arrange(n)
ames %>% ggplot(aes(as.ordered(MSSubClass), SalePrice)) + geom_boxplot(varwidth = T)
# YearRemodAdd, Remodel date (same as construction date if no remodeling or additions), integer value
# Seems strange that the lower limit is 1950 with a lot of houses. Seems like an error.
ames %>% count(YearRemodAdd) %>% arrange(desc(n))
ames %>% ggplot(aes(YearRemodAdd, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(YearRemodAdd)) +
geom_histogram()
ames %>% ggplot(aes(YearRemodAdd)) +
geom_histogram(binwidth = 5)
ames %>% ggplot(aes(YearRemodAdd)) +
geom_histogram(binwidth = 1)
ames %>% ggplot(aes(YearBuilt, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth(span = 0.7, method = "loess")
ames %>% ggplot(aes(YearRemodAdd, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(reorder(RoofStyle, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T) +
coord_flip()
ames %>% ggplot(aes(YearRemodAdd)) +
geom_histogram(binwidth = 1)
ames %>% filter(YearRemodAdd > 1950) %>% ggplot(aes(YearRemodAdd)) +
geom_histogram(binwidth = 1)
ames %>% filter(YearRemodAdd > 1950) %>% ggplot(aes(YearRemodAdd, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth(method = "lm")
ames %>% filter(YearRemodAdd > 1950) %>% ggplot(aes(YearRemodAdd, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth()
ames %>% filter(YearRemodAdd > 1950) %>% ggplot(aes(YearRemodAdd, SalePrice)) +
geom_jitter(aes(col = as.factor(OverallQual)), width = 0.1, height = 0, alpha = 1) +
geom_smooth(method = "loess")
summary(lm(SalePrice ~ YearRemodAdd, data = ames))
# RoofStyle: Type of roof, 6 levels
ames %>% count(RoofStyle) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(RoofStyle, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T) +
coord_flip()
summary(lm(SalePrice ~ RoofStyle, data = ames))
ames %>% count(RoofMatl) %>% arrange(desc(n))
# Exterior1st: Exterior covering on house, 15 levels
ames %>% count(Exterior1st) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(Exterior1st, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T) +
coord_flip()
summary(lm(SalePrice ~ Exterior1st, data = ames))
# Exterior2nd: Exterior covering on house, (if more than one material) 16 levels
ames %>% count(Exterior2nd) %>% arrange(desc(n))
summary(lm(SalePrice ~ Exterior2nd, data = ames))
