ames %>% filter(!is.na(BsmtQual)) %>% count(BsmtQual) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(BsmtQual, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# BsmtQual: Evaluates the height of the basement, 6 levels (Po poor,
# Fa fair, TA typical/average, Gd Good, Excellent Ex, NA No Basement)
# How best handle the NA here? New variable HasBasement?
ames %>% count(BsmtQual) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(BsmtQual, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# BsmtCond: Evaluates the general condition of the basement
ames %>% count(BsmtCond) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(BsmtCond, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# BsmtExposure: Refers to walkout or garden level walls
ames %>% count(BsmtExposure) %>% arrange(desc(n))
# BsmtExposure: Refers to walkout or garden level walls, 5 levels (Gd	Good Exposure,
# Av	Average Exposure (split levels or foyers typically score average or above),
# Mn	Mimimum Exposure, No	No Exposure, NA	No Basement)
# How best handle the NA here? New variable HasBasement? Replace NA:s?
ames %>% count(BsmtExposure) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder((BsmtExposure, SalePrice, FUN=median), SalePrice)) +
ames %>% ggplot(aes(reorder(BsmtExposure, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# BsmtFinType1: Rating of basement finished area
ames %>% count(BsmtFinType1) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(BsmtFinType1, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% ggplot(aes(reorder(BsmtFinType1, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# BsmtFinSF1: Type 1 finished square feet, integer
ames %>% count(BsmtFinSF1) %>% arrange(desc(n))
ames %>% ggplot(aes(BsmtFinSF1, SalePrice)) +
geom_jitter(width = 0.1, height = 0, alpha = 0.2) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(BsmtFinSF1, SalePrice)) +
geom_jitter(alpha = 0.2) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(BsmtFinSF1, SalePrice)) +
geom_jitter(alpha = 0.1) +
geom_smooth(method = "lm")
# BsmtFinType2: Rating of basement finished area (if multiple types), 7 levels
ames %>% count(BsmtFinType1) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(BsmtFinType1, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# BsmtFinType2: Rating of basement finished area (if multiple types), 7 levels
ames %>% count(BsmtFinType2) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(BsmtFinType2, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# BsmtFinSF2: Type 2 finished square feet, integer
ames %>% count(BsmtFinSF2) %>% arrange(desc(n))
ames %>% ggplot(aes(BsmtFinSF2, SalePrice)) +
geom_jitter(alpha = 0.1) +
geom_smooth(method = "lm")
summary(lm(SalePrice ~ BsmtFinSF2, data = ames))
ames %>% ggplot(aes(BsmtFinSF1, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
# BsmtUnfSF: Unfinished square feet of basement area
ames %>% count(BsmtUnfSF) %>% arrange(desc(n))
ames %>% ggplot(aes(BsmtUnfSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
# TotalBsmtSF: Total square feet of basement area
ames %>% count(TotalBsmtSF) %>% arrange(desc(n))
ames %>% ggplot(aes(TotalBsmtSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
# Heating: Type of heating, 6 levels (Floor	Floor Furnace, GasA	Gas forced warm air furnace,
# GasW	Gas hot water or steam heat, Grav	Gravity furnace, OthW	Hot water or steam heat other than gas,
# Wall	Wall furnace)
ames %>% count(Heating) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(Heating, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# HeatingQC: Heating quality and condition (5 levels from Poor to Excellent)
ames %>% count(HeatingQC) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(HeatingQC, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% ggplot(aes(CentralAir, SalePrice)) +
geom_boxplot(varwidth = T)
# CentralAir: Central air conditioning, 2 levels(N	No, Y	Yes)
ames %>% count(CentralAir) %>% arrange(desc(n))
# Electrical: Electrical system (5 levels, SBrkr	Standard Circuit Breakers & Romex,
# FuseA	Fuse Box over 60 AMP and all Romex wiring (Average), FuseF	60 AMP Fuse Box and
# mostly Romex wiring (Fair), FuseP	60 AMP Fuse Box and mostly knob & tube wiring (poor),
# Mix	Mixed)
ames %>% count(Electrical) %>% arrange(desc(n))
ames %>% ggplot(aes(Electrical, SalePrice)) +
geom_boxplot(varwidth = T)
# 1stFlrSF: First Floor square feet, integer
ames %>% count(1stFlrSF) %>% arrange(desc(n))
# 1stFlrSF: First Floor square feet, integer
ames %>% count(1stFlrSF) %>% arrange(desc(n))
# 1stFlrSF: First Floor square feet, integer
ames %>% count(FirstFlrSF) %>% arrange(desc(n))
# 1stFlrSF: First Floor square feet, integer
ames %>% count(`1stFlrSF`) %>% arrange(desc(n))
ames %>% ggplot(aes(`1stFlrSF`, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(`1stFlrSF`, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "gam")
ames %>% ggplot(aes(`1stFlrSF`, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "gam")
ames %>% ggplot(aes(`1stFlrSF`, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "loess")
ames %>% ggplot(aes(`1stFlrSF`, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
# 2ndFlrSF: Second floor square feet, integer
ames %>% count(`2ndFlrSF`) %>% arrange(desc(n))
ames %>% ggplot(aes(`2ndFlrSF`, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(`1stFlrSF`+`2ndFlrSF`, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(`1stFlrSF`+`2ndFlrSF`, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "gam")
ames %>% ggplot(aes(`1stFlrSF`+`2ndFlrSF`, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "loes")
ames %>% ggplot(aes(`1stFlrSF`+`2ndFlrSF`, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "loess")
ames %>% filter(`1stFlrSF`<`2ndFlrSF`)
ames %>% filter(`1stFlrSF`<`2ndFlrSF`) %>% select(`1stFlrSF`,`2ndFlrSF`)
ames %>% filter(`1stFlrSF`<`2ndFlrSF`) %>% select(`1stFlrSF`,`2ndFlrSF`) %>% transmute(`2ndFlrSF`-`1stFlrSF`)
plot(ames %>% filter(`1stFlrSF`<`2ndFlrSF`) %>% select(`1stFlrSF`,`2ndFlrSF`) %>% transmute(`2ndFlrSF`-`1stFlrSF`))
plot(ames %>% filter(`1stFlrSF`<`2ndFlrSF`) %>% select(`1stFlrSF`,`2ndFlrSF`) %>% transmute(`2ndFlrSF`-`1stFlrSF`), ames$SalePrice)
plot(ames %>% filter(`1stFlrSF`<`2ndFlrSF`) %>% select(`1stFlrSF`,`2ndFlrSF`) %>% transmute(`2ndFlrSF`-`1stFlrSF`), ames %>% filter(`1stFlrSF`<`2ndFlrSF`) %>% select(SalePrice))
plot(ames %>% filter(`1stFlrSF`<`2ndFlrSF`) %>% select(`1stFlrSF`,`2ndFlrSF`, SalePrice) %>% mutate(diff=`2ndFlrSF`-`1stFlrSF`)
ames %>% filter(`1stFlrSF`<`2ndFlrSF`) %>% select(`1stFlrSF`,`2ndFlrSF`, SalePrice) %>% mutate(diff=`2ndFlrSF`-`1stFlrSF`)
ames %>% filter(`1stFlrSF`<`2ndFlrSF`) %>% select(`1stFlrSF`,`2ndFlrSF`, SalePrice) %>% mutate(diff=`2ndFlrSF`-`1stFlrSF`) %>% ggplot(aes(diff, SalePrice)) + geom_point()
ames %>% filter(`1stFlrSF`<`2ndFlrSF`) %>% select(`1stFlrSF`,`2ndFlrSF`, SalePrice) %>% mutate(diff=`2ndFlrSF`-`1stFlrSF`) %>% lm(SalePrice~diff)
ames %>% filter(`1stFlrSF`<`2ndFlrSF`) %>% select(`1stFlrSF`,`2ndFlrSF`, SalePrice) %>% mutate(diff=`2ndFlrSF`-`1stFlrSF`) %>% lm(SalePrice ~ diff)
AA <- ames %>% filter(`1stFlrSF`<`2ndFlrSF`) %>% select(`1stFlrSF`,`2ndFlrSF`, SalePrice) %>% mutate(diff=`2ndFlrSF`-`1stFlrSF`)
lm(SalePrice~diff, AA)
summary(lm(SalePrice~diff, AA))
ames %>% ggplot(aes(`1stFlrSF`+`2ndFlrSF`, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(`1stFlrSF`,`2ndFlrSF`)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% filter(`2ndFlrSF` > 0) %>% ggplot(aes(`1stFlrSF`,`2ndFlrSF`)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% filter(`2ndFlrSF` > 0) %>% ggplot(aes(`1stFlrSF`,`2ndFlrSF`)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm") +
geom_abline(slope = 1, intercept = 0)
ames %>% filter(`2ndFlrSF` > 0) %>% ggplot(aes(`1stFlrSF`,`2ndFlrSF`)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm") +
geom_abline(slope = 1, intercept = 0, col = "red")
ames %>% filter(`2ndFlrSF` > 0) %>% ggplot(aes(`1stFlrSF`,`2ndFlrSF`)) +
geom_point(alpha = 0.1) +
geom_abline(slope = 1, intercept = 0, col = "red")
# LowQualFinSF: Low quality finished square feet (all floors)
ames %>% count(LowQualFinSF) %>% arrange(desc(n))
ames %>% ggplot(aes(LowQualFinSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
# GrLivArea: Above grade (ground) living area square feet
ames %>% count(GrLivArea) %>% arrange(desc(n))
ames %>% ggplot(aes(GrLivArea, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(GrLivArea, `1stFlrSF`+`2ndFlrSF`)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(GrLivArea, `1stFlrSF`+`2ndFlrSF`)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(GrLivArea, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(BsmtFullBath, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(BsmtFullBath, SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% ggplot(aes(as.factor(BsmtFullBath), SalePrice)) +
geom_boxplot(varwidth = T)
# BsmtFullBath: Basement full bathrooms, 4 levels 0-3
ames %>% count(BsmtFullBath) %>% arrange(desc(n))
# BsmtHalfBath: Basement half bathrooms
ames %>% count(BsmtHalfBath) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(BsmtHalfBath), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice~BsmtHalfBath, ames))
# FullBath: Full bathrooms above grade
ames %>% count(FullBath) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(FullBath), SalePrice)) +
geom_boxplot(varwidth = T)
# HalfBath: Half baths above grade
ames %>% count(HalfBath) %>% arrange(desc(n))
# HalfBath: Half baths above grade, 3 levels 0-2
ames %>% count(HalfBath) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(HalfBath), SalePrice)) +
geom_boxplot(varwidth = T)
# Bedroom: Bedrooms above grade (does NOT include basement bedrooms)
ames %>% count(Bedroom) %>% arrange(desc(n))
# Bedroom: Bedrooms above grade (does NOT include basement bedrooms)
ames %>% count(Bedrooms) %>% arrange(desc(n))
names(ames)
ames %>% ggplot(aes(as.factor(BedroomAbvGr), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice~BedroomAbvGr, ames))
summary(lm(SalePrice~as.factor(BedroomAbvGr), ames))
# KitchenAbvGr: Kitchens above grade
ames %>% count(KitchenAbvGr) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(KitchenAbvGr), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice~as.factor(KitchenAbvGr), ames))
names(ames)
# KitchenQual: Kitchen quality, 5 levels (Poor to Excellent)
ames %>% count(KitchenQual) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(KitchenQual), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% ggplot(aes(reorder(KitchenQual, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# TotRmsAbvGrd: Total rooms above grade (does not include bathrooms)
ames %>% count(TotRmsAbvGrd) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(TotRmsAbvGrd), SalePrice)) +
geom_boxplot(varwidth = T)
# Functional: Home functionality (Assume typical unless deductions are warranted)
ames %>% count(Functional) %>% arrange(desc(n))
# Functional: Home functionality (Assume typical unless deductions are warranted), 7 levels
ames %>% count(Functional) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(Functional, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# Fireplaces: Number of fireplaces
ames %>% count(Fireplaces) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(Fireplaces, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% ggplot(aes(as.factor(Fireplaces), SalePrice)) +
geom_boxplot(varwidth = T)
# FireplaceQu: Fireplace quality, 6 levels (NA No fireplace, Poor to Excellent)
ames %>% count(FireplaceQu) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(FireplaceQu), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% ggplot(aes(reorder(FireplaceQu, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# GarageType: Garage location, 7 levels (NA is no garage)
# How to deal with NA?
ames %>% count(GarageType) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(GarageType, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# GarageYrBlt: Year garage was built, integer
ames %>% count(GarageYrBlt) %>% arrange(desc(n))
# GarageYrBlt: Year garage was built, integer (NA no garage)
# How to deal with NA?
ames %>% count(GarageYrBlt) %>% arrange(desc(n))
ames %>% ggplot(aes(GarageYrBlt, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(GarageYrBlt, YearBuilt)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(GarageYrBlt, YearBuilt)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm") + geom_abline(1, 0)
ames %>% ggplot(aes(GarageYrBlt, YearBuilt)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm") + geom_abline(0, 1)
ames %>% ggplot(aes(GarageYrBlt, YearBuilt)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm") + geom_abline(intercept = 0, slope=1)
ames %>% ggplot(aes(GarageYrBlt, YearBuilt)) +
geom_point(alpha = 0.1) +
geom_abline(intercept = 0, slope=1)
ames %>% ggplot(aes(GarageYrBlt, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
# YearRemodAdd: Remodel date (same as construction date if no remodeling or additions)
ames %>% count(YearRemodAdd) %>% arrange(desc(n))
ames %>% ggplot(aes(YearRemodAdd, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(GarageYrBlt,YearRemodAdd)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(GarageYrBlt,YearRemodAdd)) +
geom_point(alpha = 0.1) +
geom_abline(slope = 1, intercept = 0)
ames %>% ggplot(aes(GarageYrBlt,YearBuilt)) +
geom_point(alpha = 0.1) +
geom_abline(slope = 1, intercept = 0)
# GarageFinish: Interior finish of the garage, 4 levels (Fin	Finished, RFn	Rough Finished,
# Unf	Unfinished, NA	No Garage)
# How to deal with NA?
ames %>% count(GarageFinish) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(GarageFinish, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# GarageArea: Size of garage in square feet
ames %>% count(GarageArea) %>% arrange(desc(n))
ames %>% ggplot(aes(GarageArea, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
# GarageQual: Garage quality 4 levels (Poor to Excellent, NA	No Garage)
ames %>% count(GarageQual) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(GarageQual, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# GarageCond: Garage condition
ames %>% count(GarageCond) %>% arrange(desc(n))
# GarageCond: Garage condition, 4 levels (Poor to Excellent, NA	No Garage)
ames %>% count(GarageCond) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(GarageCond, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# GarageQual: Garage quality, 4 levels (Poor to Excellent, NA	No Garage)
ames %>% count(GarageQual) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(GarageQual, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% ggplot(aes(reorder(GarageCond, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# PavedDrive: Paved driveway, 3 levels (Y	Paved, P	Partial Pavement, N	Dirt/Gravel)
ames %>% count(PavedDrive) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(PavedDrive, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% ggplot(aes(reorder(SaleCondition, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% ggplot(aes(SaleCondition, BuiltYear)) +
geom_point()
ames %>% ggplot(aes(SaleCondition, YearBuilt)) +
geom_point()
ames %>% ggplot(aes(SaleCondition, YearBuilt)) +
geom_boxplot()
ames %>% group_by(YearSold) %>% summarize(medPrice = median(SalePrice)) %>% ggplot(aes(YearSold, medPrice)) +
geom_point()
ames %>% group_by(YearSold) %>% summarize(medPrice = median(SalePrice))
ames %>% group_by(YrSold) %>% summarize(medPrice = median(SalePrice))
ames %>% group_by(YrSold) %>% summarize(medPrice = median(SalePrice))
ames %>% group_by(YrSold) %>% summarize(medPrice = median(SalePrice)) %>% ggplot(aes(YearSold, medPrice)) +
geom_point()
ames %>% group_by(YrSold) %>% summarize(medPrice = median(SalePrice)) %>% ggplot(aes(YrSold, medPrice)) +
geom_point()
# WoodDeckSF: Wood deck area in square feet
ames %>% count(WoodDeckSF) %>% arrange(desc(n))
ames %>% ggplot(aes(WoodDeckSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
# OpenPorchSF: Open porch area in square feet
ames %>% count(OpenPorchSF) %>% arrange(desc(n))
ames %>% ggplot(aes(OpenPorchSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(OpenPorchSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
ames %>% ggplot(aes(WoodDeckSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
# EnclosedPorch: Enclosed porch area in square feet
ames %>% count(EnclosedPorch) %>% arrange(desc(n))
ames %>% ggplot(aes(EnclosedPorch, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
# 3SsnPorch: Three season porch area in square feet
ames %>% count(´3SsnPorch´) %>% arrange(desc(n))
ames %>% ggplot(aes(`3SsnPorch`, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
# 3SsnPorch: Three season porch area in square feet
ames %>% count(`3SsnPorch`) %>% arrange(desc(n))
# 3SsnPorch: Three season porch area in square feet
ames %>% count(`3SsnPorch`) %>% arrange(desc(n))
summary(lm(SalePrice~3SsnPorch, ames))
summary(lm(SalePrice~`3SsnPorch``, ames))
summary(lm(SalePrice~`3SsnPorch`, ames))
dim(ames %>% filter(`3SsnPorch`>0))
# ScreenPorch: Screen porch area in square feet
ames %>% count(ScreenPorch) %>% arrange(desc(n))
dim(ames %>% filter(ScreenPorch>0))
ames %>% ggplot(aes(ScreenPorch, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
ames %>% ggplot(aes(ScreenPorch, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
# PoolArea: Pool area in square feet
ames %>% count(PoolArea) %>% arrange(desc(n))
ames %>% ggplot(aes(PoolArea, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
# PoolQC: Pool quality, 4 levels (Fair to Excellent, NA	No Pool)
ames %>% count(PoolQC) %>% arrange(desc(n))
# Fence: Fence quality, 5 levels (GdPrv	Good Privacy, MnPrv	Minimum Privacy, GdWo	Good Wood,
# MnWw	Minimum Wood/Wire, NA	No Fence)
ames %>% count(Fence) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(PoolQC, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# Fence: Fence quality, 5 levels (GdPrv	Good Privacy, MnPrv	Minimum Privacy, GdWo	Good Wood,
# MnWw	Minimum Wood/Wire, NA	No Fence)
ames %>% count(Fence) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(Fence, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# MiscFeature: Miscellaneous feature not covered in other categories, 6 levels (Elev	Elevator,
# Gar2	2nd Garage (if not described in garage section), Othr	Other, Shed	Shed (over 100 SF),
# TenC	Tennis Court, NA	None)
ames %>% count(MiscFeature) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(MiscFeature, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice~MiscFeature, ames))
ames %>%
select(-(Street:Alley), -Utilities, -LandSlope, -Condition2, -RoofMatl, -BsmtFinSF2, -Heating,
-`1stFlrSF`, -`2ndFlrSF`, -LowQualFinSF, -BsmtHalfBath, -PoolArea, -PoolQC, -MiscFeature)
dim(ames %>%
select(-(Street:Alley), -Utilities, -LandSlope, -Condition2, -RoofMatl, -BsmtFinSF2, -Heating,
-`1stFlrSF`, -`2ndFlrSF`, -LowQualFinSF, -BsmtHalfBath, -PoolArea, -PoolQC, -MiscFeature))
# MiscVal: $Value of miscellaneous feature
ames %>% count(MiscVal) %>% arrange(desc(n))
ames %>% ggplot(aes(MiscVal, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(MiscVal, SalePrice, col = MiscFeature)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(MiscVal, SalePrice)) +
geom_point(aes(col = MiscFeature)) +
geom_smooth(method = "lm")
# MoSold: Month Sold (MM)
# Run through lubridate to get month names e.g.
# Perhaps combine with year to get year+month
ames %>% count(Fence) %>% arrange(desc(n))
# MoSold: Month Sold (MM)
# Run through lubridate to get month names e.g.
# Perhaps combine with year to get year+month
ames %>% count(MoSold) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(MoSold, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% ggplot(aes(as.ordered(MoSold), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% ggplot(aes(as.ordered(YrSold), SalePrice)) +
geom_boxplot(varwidth = T)
# YrSold: Year Sold (YYYY)
# Perhaps combine with year to get year+month
ames %>% count(YrSold) %>% arrange(desc(n))
ames %>% ggplot(aes(as.ordered(YrSold), SalePrice)) +
geom_boxplot(varwidth = T)
library(lubridate)
ymd("2009-10-12")
ymd("2009-10")
ymd("2009-10-NA")
ymd("2009-10-")
# SaleType: Type of sale, 10 levels
ames %>% count(SaleType) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(SaleType, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# SaleCondition: Condition of sale, 6 levels
ames %>% count(SaleCondition) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(SaleCondition, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# SaleCondition: Condition of sale, 6 levels
ames %>% count(SaleCondition) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(SaleCondition, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% mutate(HouseAge = YrSold - YearBuilt) %>%
ggplot(aes(HouseAge, SalePrice)) +
geom_point() +
geom_smooth(method = "lm")
ames %>% mutate(HouseAge = YrSold - YearBuilt) %>%
ggplot(aes(HouseAge, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
# Add feature House Age
ames %>% mutate(HouseAge = YearBuilt) %>%
ggplot(aes(HouseAge, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
# Add feature House
ames %>% mutate(HouseAge = YrSold) %>%
ggplot(aes(HouseAge, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
# Add feature House
ames %>% mutate(HouseAge = YrSold - YearBuilt) %>%
ggplot(aes(HouseAge, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
verse_update
verse_update()
tidyverse_update()
library(tidyverse)
tidyverse_update()
library(tidyverse)
tidyverse_update()
library(tidyverse)
tidyverse_update()
install.packages(c("broom", "dbplyr", "forcats", "hms", "lubridate", "rlang",
"stringr"))
ames <- read_csv("ames_train.csv")
library(tidyverse)
ames1 <- read_csv("ames_train.csv")
ames2 <- read.csv("ames_train.csv")
ames1
ames2
ames2 %>% top_n(10)
ames1 %>% top_n(10)
ames1 %>% top_n(20)
View(ames2)
ames1 <- ames1 %>% select(Id:LandSlope)
ames2 <- ames2 %>% select(Id:LandSlope)
ames1
ames2
ames1
ames1 <- ames1 %>% mutate(MSZoning = as.factor(MSZoning))
ames1
