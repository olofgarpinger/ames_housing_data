geom_smooth(method = "lm")
# TotalBsmtSF: Total square feet of basement area
ames %>% count(TotalBsmtSF) %>% arrange(desc(n))
ames %>% ggplot(aes(BsmtFinSF2, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
summary(lm(SalePrice ~ BsmtFinSF2, data = ames))
# BsmtUnfSF: Unfinished square feet of basement area
ames %>% count(BsmtUnfSF) %>% arrange(desc(n))
ames %>% ggplot(aes(BsmtUnfSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
summary(lm(SalePrice ~ BsmtUnfSF, data = ames))
# TotalBsmtSF: Total square feet of basement area
ames %>% count(TotalBsmtSF) %>% arrange(desc(n))
ames %>% ggplot(aes(TotalBsmtSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% filter((TotalBsmtSF > 0) & (TotalBsmtSF < 2000)) %>% ggplot(aes(TotalBsmtSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% filter((TotalBsmtSF > 0) & (TotalBsmtSF < 2000)) %>% ggplot(aes(TotalBsmtSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
ames %>% filter((TotalBsmtSF > 0) & (TotalBsmtSF < 2000)) %>% ggplot(aes(TotalBsmtSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "gam")
ames %>% filter((TotalBsmtSF > 0) & (TotalBsmtSF < 2500)) %>% ggplot(aes(TotalBsmtSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "gam")
ames %>% filter((TotalBsmtSF > 0) & (TotalBsmtSF < 2500)) %>% ggplot(aes(TotalBsmtSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
ames %>% filter((TotalBsmtSF > 0) & (TotalBsmtSF < 2500)) %>% ggplot(aes(TotalBsmtSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(span = 0.5)
ames %>% filter((TotalBsmtSF > 0) & (TotalBsmtSF < 2500)) %>% ggplot(aes(TotalBsmtSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(span = 1)
ames %>% filter((TotalBsmtSF > 0) & (TotalBsmtSF < 2500)) %>% ggplot(aes(TotalBsmtSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "loess")
ames %>% filter((TotalBsmtSF > 0) & (TotalBsmtSF < 2500)) %>% ggplot(aes(TotalBsmtSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "loess", span = 0.1)
ames %>% filter((TotalBsmtSF > 0) & (TotalBsmtSF < 2500)) %>% ggplot(aes(TotalBsmtSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "loess", span = 0.5)
ames %>% filter((TotalBsmtSF > 0) & (TotalBsmtSF < 2500)) %>% ggplot(aes(TotalBsmtSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "loess", span = 1)
ames %>% ggplot(aes(TotalBsmtSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "loess", span = 1)
summary(lm(SalePrice ~ TotalBsmtSF, data = ames))
summary(lm(SalePrice ~ TotalBsmtSF, data = ames))
# Heating: Type of heating, 6 levels (Floor	Floor Furnace, GasA	Gas forced warm air furnace,
# GasW	Gas hot water or steam heat, Grav	Gravity furnace, OthW	Hot water or steam heat other than gas,
# Wall	Wall furnace). Not enough variety in feature => remove
ames %>% count(Heating) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(Heating, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# HeatingQC: Heating quality and condition (5 levels from Poor to Excellent)
ames %>% count(HeatingQC) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(HeatingQC, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ HeatingQC, data = ames))
# CentralAir: Central air conditioning, 2 levels(N No, Y	Yes)
ames %>% count(CentralAir) %>% arrange(desc(n))
ames %>% ggplot(aes(CentralAir, SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ CentralAir, data = ames))
# Electrical: Electrical system (5 levels, SBrkr	Standard Circuit Breakers & Romex,
# FuseA	Fuse Box over 60 AMP and all Romex wiring (Average), FuseF	60 AMP Fuse Box and
# mostly Romex wiring (Fair), FuseP	60 AMP Fuse Box and mostly knob & tube wiring (poor),
# Mix	Mixed)
ames %>% count(Electrical) %>% arrange(desc(n))
ames %>% ggplot(aes(Electrical, SalePrice)) +
geom_boxplot(varwidth = T)
# Electrical: Electrical system (5 levels, SBrkr	Standard Circuit Breakers & Romex,
# FuseA	Fuse Box over 60 AMP and all Romex wiring (Average), FuseF 60 AMP Fuse Box and
# mostly Romex wiring (Fair), FuseP	60 AMP Fuse Box and mostly knob & tube wiring (poor),
# Mix	Mixed)
ames %>% count(Electrical) %>% arrange(desc(n))
ames %>% ggplot(aes(Electrical, SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ Electrical, data = ames))
# 1stFlrSF: First Floor square feet, integer
ames %>% count(`1stFlrSF`) %>% arrange(desc(n))
ames %>% ggplot(aes(`1stFlrSF`, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
####### Combine in any way? Also with Basement? #######
# 1stFlrSF: First Floor square feet, integer
ames %>% count(`1stFlrSF`) %>% arrange(desc(n))
ames %>% ggplot(aes(`1stFlrSF`, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(`1stFlrSF`+`2ndFlrSF`, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(`1stFlrSF`+`2ndFlrSF`, SalePrice, col = as.ordered(OverallQual))) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(`1stFlrSF`+`2ndFlrSF`, SalePrice)) +
geom_point(aes(col = as.ordered(OverallQual)), alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(`1stFlrSF`+`2ndFlrSF`, SalePrice)) +
geom_point(aes(col = as.ordered(OverallQual)), alpha = 1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(`1stFlrSF`, SalePrice)) +
geom_point(aes(col = as.ordered(OverallQual)), alpha = 1) +
geom_smooth(method = "lm")
# LowQualFinSF: Low quality finished square feet (all floors), weak relation => remove feature
ames %>% count(LowQualFinSF) %>% arrange(desc(n))
ames %>% ggplot(aes(LowQualFinSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(GrLivArea-`2ndFlrSF`, `1stFlrSF`)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(LowQualFinSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
# GrLivArea: Above grade (ground) living area square feet. Basically 1st+2nd floor area
ames %>% count(GrLivArea) %>% arrange(desc(n))
summary(lm(SalePrice ~ `1stFlrSF`, data = ames))
summary(lm(SalePrice ~ `2ndFlrSF`, data = ames))
summary(lm(SalePrice ~ LowQualFinSF, data = ames))
summary(lm(SalePrice ~ GrLivArea, data = ames))
# GrLivArea: Above grade (ground) living area square feet. Basically 1st+2nd floor area
ames %>% count(GrLivArea) %>% arrange(desc(n))
ames %>% ggplot(aes(GrLivArea, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
summary(lm(SalePrice ~ GrLivArea, data = ames))
summary(lm(SalePrice ~ GrLivArea + `1stFlrSF` + `2ndFlrSF`, data = ames))
summary(lm(SalePrice ~ GrLivArea:`1stFlrSF` + GrLivArea:`2ndFlrSF` + `1stFlrSF`:`2ndFlrSF`, data = ames))
summary(lm(SalePrice ~ I(GrLivArea:`1stFlrSF`) + GrLivArea:`2ndFlrSF` + `1stFlrSF`:`2ndFlrSF`, data = ames))
summary(lm(SalePrice ~ GrLivArea:`1stFlrSF` + GrLivArea:`2ndFlrSF` + `1stFlrSF`:`2ndFlrSF`, data = ames))
summary(lm(SalePrice ~ GrLivArea+GrLivArea:`1stFlrSF` + `1stFlrSF` + GrLivArea:`2ndFlrSF` + `1stFlrSF`:`2ndFlrSF` + `2ndFlrSF`, data = ames))
summary(lm(SalePrice ~ GrLivArea, data = ames))
# BsmtFullBath: Basement full bathrooms, 4 levels 0-3
ames %>% count(BsmtFullBath) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(BsmtFullBath), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ BsmtFullBath, data = ames))
summary(lm(SalePrice ~ as.factor(BsmtFullBath), data = ames))
# BsmtFullBath: Basement full bathrooms, 4 levels 0-3
ames %>% count(BsmtFullBath) %>% arrange(desc(n))
# FullBath: Full bathrooms above grade, 4 levels 0-3
ames %>% count(FullBath) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(FullBath), SalePrice)) +
geom_boxplot(varwidth = T)
# FullBath: Full bathrooms above grade, 4 levels 0-3
ames %>% count(FullBath) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(FullBath+BsmtFullBath), SalePrice)) +
geom_boxplot(varwidth = T)
# FullBath: Full bathrooms above grade, 4 levels 0-3
ames %>% count(FullBath) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(FullBath+BsmtFullBath+BsmtHalfBath), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% ggplot(aes(as.factor(BsmtHalfBath), SalePrice)) +
geom_boxplot(varwidth = T)
# FullBath: Full bathrooms above grade, 4 levels 0-3
ames %>% count(FullBath) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(FullBath+BsmtFullBath+0.5*BsmtHalfBath), SalePrice)) +
geom_boxplot(varwidth = T)
# FullBath: Full bathrooms above grade, 4 levels 0-3
ames %>% count(FullBath) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(FullBath+BsmtFullBath+0.5*BsmtHalfBath), SalePrice)) +
geom_jitter()
# FullBath: Full bathrooms above grade, 4 levels 0-3
ames %>% count(FullBath) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(FullBath+BsmtFullBath+0.5*BsmtHalfBath), SalePrice)) +
geom_violin()
# FullBath: Full bathrooms above grade, 4 levels 0-3
ames %>% count(FullBath) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(FullBath+BsmtFullBath+0.5*BsmtHalfBath), SalePrice)) +
geom_violin()
# FullBath: Full bathrooms above grade, 4 levels 0-3
ames %>% count(FullBath) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(FullBath+BsmtFullBath+0.5*BsmtHalfBath), SalePrice)) +
geom_violin(varwidth = T)
# FullBath: Full bathrooms above grade, 4 levels 0-3
ames %>% count(FullBath) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(FullBath+BsmtFullBath+0.5*BsmtHalfBath), SalePrice)) +
geom_violin()
ames %>% ggplot(aes(as.factor(BsmtHalfBath), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% ggplot(aes(as.factor(BsmtHalfBath), SalePrice)) +
geom_boxplot(varwidth = T)
# BedroomAbvGr: Bedrooms above grade (does NOT include basement bedrooms), 7 levels from 0-8
ames %>% count(BedroomAbvGr) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(BedroomAbvGr), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% ggplot(aes(as.factor(BedroomAbvGr), SalePrice)) +
geom_boxplot(varwidth = T) +
geom_smooth()
ames %>% ggplot(aes((BedroomAbvGr), SalePrice)) +
geom_boxplot(varwidth = T) +
geom_smooth()
ames %>% ggplot(aes((BedroomAbvGr), SalePrice)) +
geom_point() +
geom_smooth()
ames %>% ggplot(aes((BedroomAbvGr), SalePrice)) +
geom_point() +
geom_smooth(method = "lm")
ames %>% ggplot(aes(as.factor(BedroomAbvGr), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ as.factor(BsmtHalfBath), data = ames))
summary(lm(SalePrice ~ as.factor(FullBath), data = ames))
summary(lm(SalePrice ~ as.factor(HalfBath), data = ames))
# BedroomAbvGr: Bedrooms above grade (does NOT include basement bedrooms), 7 levels from 0-8
ames %>% count(BedroomAbvGr) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(BedroomAbvGr), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ as.factor(BedroomAbvGr), data = ames))
# KitchenAbvGr: Kitchens above grade
ames %>% count(KitchenAbvGr) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(KitchenAbvGr), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ as.factor(KitchenAbvGr), data = ames))
ames %>% count(KitchenQual) %>% arrange(desc(n))
summary(lm(SalePrice ~ KitchenQual, data = ames))
# KitchenQual: Kitchen quality, 5 levels (Poor to Excellent)
ames %>% count(KitchenQual) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(KitchenQual, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% ggplot(aes(reorder(KitchenQual, OverallQual, col = SalePrice, FUN=median), SalePrice)) +
geom_tile()
ames %>% ggplot(aes(x = KitchenQual, y = OverallQual, col = SalePrice, SalePrice)) +
geom_tile()
ames %>% ggplot(aes(x = KitchenQual, y = OverallQual, fill = SalePrice, SalePrice)) +
geom_tile()
summary(lm(SalePrice ~ OverallQual+KitchenQual, data = ames))
# TotRmsAbvGrd: Total rooms above grade (does not include bathrooms)
ames %>% count(TotRmsAbvGrd) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(TotRmsAbvGrd), SalePrice)) +
geom_boxplot(varwidth = T)
# Functional: Home functionality (Assume typical unless deductions are warranted), 7 levels
# Collapse dysfunctional levels?
ames %>% count(Functional) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(Functional, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
ames %>% ggplot(aes(GrLivArea, SalePrice, col = Functional)) +
geom_point()
summary(lm(SalePrice ~ TotRmsAbvGrd, data = ames))
summary(lm(SalePrice ~ TotRmsAbvGrd, data = ames))
summary(lm(SalePrice ~ as.factor(TotRmsAbvGrd), data = ames))
summary(lm(SalePrice ~ Functional, data = ames))
# Fireplaces: Number of fireplaces
ames %>% count(Fireplaces) %>% arrange(desc(n))
ames %>% ggplot(aes(as.factor(Fireplaces), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ Fireplaces, data = ames))
summary(lm(SalePrice ~ as.factor(Fireplaces), data = ames))
# FireplaceQu: Fireplace quality, 6 levels (NA No fireplace, Poor to Excellent)
# How to deal with NA?
ames %>% count(FireplaceQu) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(FireplaceQu, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ as.factor(FireplaceQu), data = ames))
# GarageType: Garage location, 7 levels (NA is no garage)
# How to deal with NA?
ames %>% count(GarageType) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(GarageType, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ GarageType, data = ames))
# GarageYrBlt: Year garage was built, integer (NA no garage)
# Largely the same as YearBuilt (i.e. the house)
# How to deal with NA?
ames %>% count(GarageYrBlt) %>% arrange(desc(n))
ames %>% ggplot(aes(GarageYrBlt, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
summary(lm(SalePrice ~ GarageYrBlt, data = ames))
summary(lm(SalePrice ~ GarageFinish, data = ames))
ames %>% ggplot(aes(reorder(GarageFinish, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# GarageArea: Size of garage in square feet
# How to deal with zeros?
ames %>% count(GarageArea) %>% arrange(desc(n))
ames %>% ggplot(aes(GarageArea, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
ames %>% ggplot(aes(GarageArea, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
summary(lm(SalePrice ~ GarageFinish, data = ames))
summary(lm(SalePrice ~ GarageArea, data = ames))
# GarageQual: Garage quality, 4 levels (Poor to Excellent, NA	No Garage)
ames %>% count(GarageQual) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(GarageQual, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ GarageQual, data = ames))
summary(ames$GarageType)
summary(as.factor(ames$GarageType))
# GarageYrBlt: Year garage was built, integer (NA no garage)
# Largely the same as YearBuilt (i.e. the house)
# How to deal with NA?
ames %>% count(GarageYrBlt) %>% arrange(desc(n))
ames %>% ggplot(aes(GarageYrBlt, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
# GarageCond: Garage condition, 4 levels (Poor to Excellent, NA	No Garage)
ames %>% count(GarageCond) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(GarageCond, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ GarageCond, data = ames))
# PavedDrive: Paved driveway, 3 levels (Y	Paved, P Partial Pavement, N Dirt/Gravel)
ames %>% count(PavedDrive) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(PavedDrive, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ PavedDrive, data = ames))
# WoodDeckSF: Wood deck area in square feet
ames %>% count(WoodDeckSF) %>% arrange(desc(n))
ames %>% ggplot(aes(WoodDeckSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
ames %>% ggplot(aes(reorder(PavedDrive, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# WoodDeckSF: Wood deck area in square feet
ames %>% count(WoodDeckSF) %>% arrange(desc(n))
ames %>% ggplot(aes(WoodDeckSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
summary(lm(SalePrice ~ WoodDeckSF, data = ames))
# OpenPorchSF: Open porch area in square feet
ames %>% count(OpenPorchSF) %>% arrange(desc(n))
ames %>% ggplot(aes(OpenPorchSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
ames %>% ggplot(aes(OpenPorchSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
lm(SalePrice ~ ., data = ames)
# OpenPorchSF: Open porch area in square feet
ames %>% count(OpenPorchSF) %>% arrange(desc(n))
ames %>% ggplot(aes(OpenPorchSF, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
summary(lm(SalePrice ~ OpenPorchSF, data = ames))
# EnclosedPorch: Enclosed porch area in square feet
ames %>% count(EnclosedPorch) %>% arrange(desc(n))
ames %>% ggplot(aes(EnclosedPorch, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
ames %>% ggplot(aes(EnclosedPorch, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
summary(lm(SalePrice ~ OpenPorchSF, data = ames))
summary(lm(SalePrice ~ EnclosedPorch, data = ames))
# 3SsnPorch: Three season porch area in square feet.
# Few houses that has it (24)
ames %>% count(`3SsnPorch`) %>% arrange(desc(n))
ames %>% ggplot(aes(`3SsnPorch`, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
ames %>% ggplot(aes(`3SsnPorch`, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth()
summary(lm(SalePrice ~ `3SsnPorch`, data = ames))
# ScreenPorch: Screen porch area in square feet
ames %>% count(ScreenPorch) %>% arrange(desc(n))
ames %>% ggplot(aes(ScreenPorch, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
summary(lm(SalePrice ~ ScreenPorch, data = ames))
# PoolArea: Pool area in square feet, too few > 0 => remove
ames %>% count(PoolArea) %>% arrange(desc(n))
ames %>% ggplot(aes(PoolArea, SalePrice)) +
geom_point(alpha = 0.1) +
geom_smooth(method = "lm")
# PoolQC: Pool quality, 4 levels (Fair to Excellent, NA	No Pool), too many NA's => remove
ames %>% count(PoolQC) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(PoolQC, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
# Fence: Fence quality, 5 levels (GdPrv	Good Privacy, MnPrv	Minimum Privacy, GdWo	Good Wood,
# MnWw	Minimum Wood/Wire, NA	No Fence)
# Fix NA's
ames %>% count(Fence) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(Fence, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ Fence, data = ames))
# MiscFeature: Miscellaneous feature not covered in other categories, 6 levels (Elev	Elevator,
# Gar2	2nd Garage (if not described in garage section), Othr	Other, Shed	Shed (over 100 SF),
# TenC	Tennis Court, NA	None). Doesn't seem to affect price => remove
ames %>% count(MiscFeature) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(MiscFeature, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ MiscFeature, data = ames))
summary(lm(SalePrice ~ MiscVal, data = ames))
ames %>% ggplot(aes(MiscVal, SalePrice)) +
geom_point(aes(col = MiscFeature)) +
geom_smooth(method = "lm")
# MoSold: Month Sold (MM)
# Run through lubridate to get month names e.g.
# Perhaps combine with year to get year+month
ames %>% count(MoSold) %>% arrange(desc(n))
ames %>% ggplot(aes(as.ordered(MoSold), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ as.factor(MoSold), data = ames))
# YrSold: Year Sold (YYYY)
# Perhaps combine with year to get year+month
ames %>% count(YrSold) %>% arrange(desc(n))
ames %>% ggplot(aes(as.ordered(YrSold), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ as.factor(YrSold), data = ames))
ames %>% ggplot(aes(as.ordered(MoSold), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ as.factor(MoSold), data = ames))
ames %>% count(MoSold) %>% ggplot(aes(n)) +
geom_histogram()
ames %>% count(MoSold) %>% ggplot(aes(MoSold)) +
geom_histogram()
ames %>% ggplot(aes(MoSold)) +
geom_histogram()
ames %>% ggplot(aes(MoSold)) +
geom_histogram(binwidth = 1)
ames %>% ggplot(aes(YrSold)) +
geom_histogram(binwidth = 1)
summary(lm(SalePrice ~ as.factor(YrSold), data = ames))
# SaleType: Type of sale, 10 levels
ames %>% count(SaleType) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(SaleType, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ as.factor(YrSold), data = ames))
# SaleCondition: Condition of sale, 6 levels
ames %>% count(SaleCondition) %>% arrange(desc(n))
ames %>% ggplot(aes(reorder(SaleCondition, SalePrice, FUN=median), SalePrice)) +
geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ SaleCondition, data = ames))
install.packages("mlr")
MSZoning %>% count()
ames %>% MSZoning %>% count()
ames %>% count(MSZoning)
library(mlr)
?mergeSmallFactorLevels
# MSSubClass - Building class, 15 levels, what does it mean?
ames %>% count(MSSubClass) %>% arrange(n)
ames %>% ggplot(aes(as.ordered(MSSubClass), SalePrice)) + geom_boxplot(varwidth = T)
summary(lm(SalePrice ~ as.factor(MSSubClass), data = ames))
ames %>% ggplot(aes(reorder(as.ordered(MSSubClass), SalePrice, FUN=median), SalePrice), SalePrice) + geom_boxplot(varwidth = T)
# MSSubClass - Building class, 15 levels, Identifies the type of dwelling involved in the sale.
ames %>% count(MSSubClass) %>% arrange(n)
ames %>% count(MSSubClass) %>% arrange(n)
# MSZoning, Identifies the general zoning classification of the sale, 5 levels
ames %>% count(MSZoning) %>% arrange(n)
dim(ames)
1460*0.01
ames$MSSubClass
?function
count(as.factor(ames$MSSubClass))
summary(as.factor(ames$MSSubClass))
summary(as.factor(ames$MSSubClass))[1]
summary(as.factor(ames$MSSubClass))[[1]]
sort(summary(as.factor(ames$MSSubClass))[[1]])
sort(summary(as.factor(ames$MSSubClass)))
sum(summary(as.factor(ames$MSSubClass))>20)
remove_classes <- function(col, N) {
keep <- sum(summary(as.factor(col)) > N)
fct_lump(col, n = keep)
}
remove_classes(ames$MSSubClass, 20)
col = ames$MSSubClass
col
col = ames$MSSubClass
N = 20
keep <- sum(summary(as.factor(col)) > N)
keep
fct_lump(col, n = keep)
?fct_lump
col
typeof(col)
col <- as.factor(col)
col
keep <- sum(summary(col) > N)
keep
col <- fct_lump(col, n = keep)
col
col = ames$MSZoning
col
# MSZoning, Identifies the general zoning classification of the sale, 5 levels
ames %>% count(MSZoning) %>% arrange(n)
col = ames$MSZoning
remove_classes <- function(col, N) {
col <- as.factor(col)
keep <- sum(summary(col) > N)
col <- fct_lump(col, n = keep)
}
remove_classes(MSZoning)
remove_classes(ames$MSZoning)
col <- as.factor(col)
keep <- sum(summary(col) > N)
keep
# MSSubClass - Building class, 15 levels, Identifies the type of dwelling involved in the sale.
ames %>% count(MSSubClass) %>% arrange(n)
# MSZoning, Identifies the general zoning classification of the sale, 5 levels
ames %>% count(MSZoning) %>% arrange(n)
col <- fct_lump(col, n = keep)
col
remove_classes(ames$MSZoning, 20)
tmp <- remove_classes(ames$MSZoning, 20)
tmp
mutate(MSSubClass = remove_classes(MSSubClass, 20))
mutate(MSSubClass = remove_classes(MSSubClass, 20))
ames <- ames %>%
select(-(Street:Alley), -Utilities, -Condition2, -RoofMatl, -BsmtFinSF2, -Heating, -`1stFlrSF`,
-`2ndFlrSF`, -LowQualFinSF, -`3SsnPorch`, -PoolArea, -PoolQC, -MiscFeature, -MiscVal) %>%
mutate(MSSubClass = remove_classes(MSSubClass, 20))
ames$MSSubClass
